#!/bin/sh
#
# ARDOC - NIghtly COntrol System
# Author Alex Undrus <undrus@bnl.gov>
# 
# ----------------------------------------------------------
# ardoc_webpage
# ----------------------------------------------------------
#
noerrorhandler=0
phase=0
nomail=0
nobuildmail=0
notestmail=0
jid="NONE"
while [ $# -ne 0 ]; do
    case $1 in
         --clean)      phase=1;;
         --noerror)    phase=0; noerrorhandler=1;;
         --jid)        jid=$2; shift;;
    esac
    shift
done

echo "------------------------------------------------------------"
echo "   Starting ARDOC web pages generation"
echo "------------------------------------------------------------"
####
source ${ARDOC_WORK_AREA}/ardoc_webpage_gen
####

array_proj=(${ARDOC_PROJECT_ARRAY})
el_proj=${#array_proj[@]}
last_el_proj=$((${el_proj} - 1))
sign_first=0
sign_last=0
if [ "${array_proj[0]}" = "" -o "${array_proj[0]}" = "$ARDOC_PROJECT_NAME" ]; then
sign_first=1
fi

if [ "${last_el_proj}" -lt 0 ]; then
sign_last=1
elif [ "${array_proj[${last_el_proj}]}" = "" -o "${array_proj[${last_el_proj}]}" = "$ARDOC_PROJECT_NAME" ]; then
sign_last=1
fi

if [ "$phase" -eq 1 ]; then
##
##CLEAN
if [ -f $ARDOC_WORK_AREA/ardoc_prepage ]; then rm -f $ARDOC_WORK_AREA/ardoc_prepage; fi
if [ -f $ARDOC_WORK_AREA/ardoc_testprepage ]; then rm -f $ARDOC_WORK_AREA/ardoc_testprepage; fi
if [ -f $ARDOC_WORK_AREA/ardoc_loghandler_report ]; then rm -f $ARDOC_WORK_AREA/ardoc_loghandler_report; fi
touch $ARDOC_WORK_AREA/ardoc_prepage
touch $ARDOC_WORK_AREA/ardoc_testprepage
touch $ARDOC_WORK_AREA/ardoc_loghandler_report
##
else # if [ "$phase" -eq 1 ]; then
##
##REG
export ARDOC_PROJECT_RELNAME_COPY=$ARDOC_PROJECT_RELNAME
${ARDOC_HOME}/ardoc_lock --lock --dir ${ARDOC_WEBDIR}
${ARDOC_HOME}/ardoc_errorhandler --jid $jid
${ARDOC_HOME}/ardoc_lock --unlock --dir ${ARDOC_WEBDIR}
#if [ "$ARDOC_WEB_ACCESS_DIR_ALT" != "" ]; then
#  copy_origin="$ARDOC_WEBDIR"
#  copy_target="$ARDOC_WEB_ACCESS_DIR_ALT/${ARDOC_NIGHTLY_GROUP}WebArea/ardoc_web_area${ARDOC_SUFFIX}"
#  [[ ! -d $copy_target ]] && mkdir -p $copy_target
#  echo "ardoc_webpage: Info: running alt rsync -uvrlpt $copy_origin/ $copy_target" $(date)
#  epoch_start=$(date +%s)
#  rsync -uvrlpt $copy_origin/ $copy_target; st_rsync=$?
#  epoch_end=$(date +%s)
#  epoch_diff=$((epoch_end - epoch_start))
#  fname=$copy_target/copy_time_stamp.txt
#  hname=$(hostname | cut -d. -f1)
#  strng="COPY ON ${hname}, process $$"
#  echo ${strng} > ${fname}; st_eos21=$?
#  grep -q "${strng}" ${fname}; st_eos22=$?
#  if [ "${st_rsync}" -eq 0 -a "${st_eos21}" -eq 0 -a "${st_eos22}" -eq 0 ]; then
#    echo "INFO: EOS COPY QUALITY CHECK PASSED"
##    mail -s "CI EOS log copy success on ${hname}" "undrus@bnl.gov" <<< "$copy_origin to $copy_target runtime ${epoch_diff} s,success on $(date)" 
#  else
#    echo "WARNING: EOS COPY QUALITY CHECK FAILED: rsync status ${st_rsync}, small file write/read: (${fname} ${st_eos21} ${st_eos22})"
##    mail -s "CI EOS log copy failure on ${hname}" "undrus@bnl.gov" <<< "$copy_origin to $copy_target runtime ${epoch_diff} s, error codes ${st_rsync} ${st_eos21} ${st_eos22} on $(date)"  
#  fi
#  echo "ardoc_webpage: Info: END running alt rsync -uvrlpt $copy_origin/ $copy_target ${st_rsync} ${st_eos21} ${st_eos22} runtime ${epoch_diff} s" $(date)
#  buildlogarea="${copy_target}/ARDOC_Log_${ARDOC_PROJECT_RELNAME_COPY}"
#  testlogarea="${copy_target}/ARDOC_TestLog_${ARDOC_PROJECT_RELNAME_COPY}"
#  for logarea in "${buildlogarea}" "${testlogarea}"
#  do		 
#    echo "ardoc_webpage: Info: STARTING filling logarea: ${logarea}"
#    if [ -d ${logarea} ]; then
#      echo "ardoc_webpage: Info: running mv ${logarea} ${logarea}_tmp" 
#      mv ${logarea} ${logarea}_tmp; st_sq01=$?
#      echo "ardoc_webpage: Info: running eos squash new ${logarea}"
#      eos squash new ${logarea}; st_sq02=$?
#      echo "ardoc_webpage: Info: running rsync -uvrlpt ${logarea}_tmp/ ${logarea}"
#      rsync -uvrlpt ${logarea}_tmp/ ${logarea}; st_sq03=$?
#      echo "ardoc_webpage: Info: running eos squash pack ${logarea}"
#      eos squash pack ${logarea}; st_sq04=$?
#      st_sqsum=0
#      [[ "${st_sq01}" != 0 || "${st_sq02}" != 0 || "${st_sq03}" != 0 || "${st_sq04}" != 0 ]] && st_sqsum=1 
#      if [ "${st_sqsum}" -eq 0 ]; then
#         echo "INFO: SquashFS archive was successfully created on $(date)"
##        mail -s "SquashFS archive was successfully created on ${hname}" "undrus@bnl.gov" <<< "$copy_origin to $logarea SquashFS archive success on $(date)"
#         echo "INFO: removing ${logarea}_tmp"
#         rm -rf ${logarea}_tmp 
#      else
#         echo "WARNING: SquashFS archive creation failed on $(date), error codes ${st_sq01}, ${st_sq02}, ${st_sq03}, ${st_sq04}"
##        mail -s "SquashFS archive creation failed on ${hname}" "undrus@bnl.gov" <<< "$copy_origin to $logarea, SquashFS error codes ${st_sq01}, ${st_sq02}, ${st_sq03}, ${st_sq04} on $(date)"
#      fi 
#    fi
#    echo "ardoc_webpage: Info: END filling logarea: ${logarea}"
#  done
#fi
if [ "$ARDOC_WEB_ACCESS_DIR" != "" ]; then
  copy_origin="$ARDOC_WEBDIR"
  copy_target="$ARDOC_WEB_ACCESS_DIR/${ARDOC_NIGHTLY_GROUP}WebArea/ardoc_web_area${ARDOC_SUFFIX}" 
  [[ ! -d $copy_target ]] && mkdir -p $copy_target
  echo "ardoc_webpage: Info: running rsync -uvrlpt $copy_origin/ $copy_target" $(date)
  rsync -uvrlpt $copy_origin/ $copy_target
  echo "ardoc_webpage: Info: END running rsync -uvrlpt $copy_origin/ $copy_target" $(date)
fi

##
fi #[ "$phase"



