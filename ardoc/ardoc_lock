#!/bin/sh
action=""
drctr=""
while [ $# -ne 0 ]; do
    case $1 in
        --dir)         drctr=$2; shift;;
	--lock)        action="lock";;
        --unlock)      action="unlock";;
        esac
        shift
done

if [ "$drctr" = "" ]; then
echo "ardoc_lock: error: directory is not specified"
exit 1
fi

if [ ! -d $drctr ]; then
echo "ardoc_lock: error: specified directory $drctr does not exist"
exit 1
fi

if [ "$action" != "lock" -a "$action" != "unlock" ]; then
echo "ardoc_lock: warning: wrong action specified: assumed unlock"
action="unlock"
fi

lfl="$drctr/.ardoc_lock"

if [ "$action" = "unlock" ]; then
if [ ! -f $lfl ]; then
echo "ardoc_lock: unlock action is not needed: file $lfl does not exist" 
exit
fi
unm=`uname`
if [ "$unm" = "Darwin" ]; then 
datef=`stat -f "%Sm %N" $lfl`
else
datef=`stat -c %y $lfl`
fi
echo "ardoc_lock: removing lock $lfl dated $datef"
rm -f $lfl
fi
##################
if [ "$action" = "lock" ]; then

if [ ! -f $lfl ]; then
echo "ardoc_lock: setting lock $lfl at" `date` 
touch $lfl
exit
else # if [ ! -f $lfl ]; then

quant=60
LIMIT=10

a=1
while [ "$a" -le $LIMIT ]
do
let "a+=1"

df=$(${ARDOC_HOME}/ardoc_mtime_diff.pl $lfl)
if [ "$df" -gt 3 ]; then
unm=`uname`
if [ "$unm" = "Darwin" ]; then
datef=`stat -f "%Sm %N" $lfl`
else
datef=`stat -c %y $lfl`
fi
echo "ardoc_lock: old lock $lfl dated $datef (${df}) is being ignored and renewed"
touch $lfl
break
fi

echo "ardoc_lock: sleeping $((a-1)): lock $lfl exists"
sleep $quant

if [ "$a" -gt "$LIMIT" ]; then
echo "ardoc_lock : error: number of sleep periods reached the limit $LIMIT"
exit 1
fi

done
fi
fi