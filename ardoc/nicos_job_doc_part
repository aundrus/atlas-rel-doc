#!/bin/sh
#
# NICOS - NIghtly COntrol System
# Author Alex Undrus <undrus@bnl.gov>
# 
# ----------------------------------------------------------
# nicos_job : main nicos executable
# ----------------------------------------------------------
#
jid="NONE"
#while [ $# -ne 0 ]; do
#    case $1 in
#         -b | --begin)     start_point=$2; shift;;
#              --end)       end_step=$2; shift;;
#         -s | --scratch)   from_scratch="yes";;
#              --nocopy)    copy_steps="no";;  
#         -r | --relnum)    relnum_fixed=$2; shift;;
#         -* | --*)         show_help; exit 1;;
#    esac
#    shift
#done

comname=`basename $0`
if [ "$comname" = "nicos_job_doc" ]; then
exitcomjob="exit"
else
exitcomjob="return"
fi

if [ "${NICOS_HOME}" = "" ]; then
echo "nicos_job: NICOS_HOME variable is not defined, "
echo "           please set before running nicos jobs"
eval ${exitcomjob} 1
fi
if [ "${NICOS_PROJECT_RELNAME}" = "" ]; then
echo "nicos_job: NICOS_PROJECT_RELNAME variable is not defined, "
echo "           please set before running nicos jobs"
eval ${exitcomjob} 1
fi
export NICOS_PROJECT_RELNAME_COPY=$NICOS_PROJECT_RELNAME

rm -f /tmp/nicos_log* > /dev/null 2>&1
tmp_log="/tmp/nicos_log_$$"
tmp_env="/tmp/nicos_env_$$"
env > $tmp_env
#######STEP 0   CONFIG##########
date_start_config=`date +"%Y-%m-%d %H:%M:%S"`
NICOS_BYPASS="no"
[[ "${NICOS_BYPASS_ENABLE}" = "yes" ]] && NICOS_BYPASS="yes" 
export NICOS_BYPASS
source ${NICOS_HOME}/nicos_config > ${tmp_log} 2>&1; stat=$?
if [ "$stat" -ne 0 ]; then 
echo "NICOS_LOG=" ${NICOS_LOG}
echo "nicos_job:  NICOS failed at configuration" >> ${NICOS_LOG}; eval ${exitcomjob} ${stat}  
fi
  dsta=`date +"%Y-%m-%d %H:%M"`
  echo $dsta > ${NICOS_WORK_AREA}/start_date
  [[ -f ${NICOS_WORK_AREA}/end_date ]] && rm -f ${NICOS_WORK_AREA}/end_date
  touch ${NICOS_WORK_AREA}/end_date
#######    
echo "DDDDDDDDDDDDDDD"

cat ${tmp_log}                                                                                     
echo "DDDDDDDDDDDDDDA"
env | grep NICOS
echo "DDDDDDDDDDDDDDB"

###### 
##${NICOS_HOME}/nicos_progress_informer 0 "$date_start_config"

cat ${tmp_log} >> ${NICOS_LOG} 

##$NICOS_HOME/nicos_db_access -b -s "TOOLINIT"
##$NICOS_HOME/nicos_db_access -e -s "TOOLINIT" --nochange
##$NICOS_HOME/nicos_db_access -b -s "CHECKOUT"
##$NICOS_HOME/nicos_db_access -e -s "CHECKOUT"
##$NICOS_HOME/nicos_db_access -b -s "PROJECTCONF"
##$NICOS_HOME/nicos_db_access -e -s "PROJECTCONF"
##$NICOS_HOME/nicos_db_access -b -s "BUILD"
##$NICOS_HOME/nicos_db_access -e -s "BUILD"

dbuildlog=`dirname $NICOS_BUILDLOG`
python $NICOS_HOME/nicos_container_extractor_monol.py >> ${NICOS_LOG} 2>&1
$NICOS_HOME/nicos_cmake_loghandler_new.pl >> ${NICOS_LOG} 2>&1
$NICOS_HOME/nicos_cmake_loghandler_new_2ndloop.pl -l $dbuildlog/nicos_build.loglog >> ${NICOS_LOG} 2>&1

##$NICOS_HOME/nicos_db_access -b -s "ERR"
#${NICOS_HOME}/nicos_webpage --nomail --jid $jid >> ${NICOS_LOG} 2>&1; stat=$?
${NICOS_HOME}/nicos_webpage --nomail >> ${NICOS_LOG} 2>&1; stat=$?
if [ "$stat" -ne 0 ]; then 
echo "nicos_job:  NICOS failed while analysing error or generating web pages"; 
##eval ${exitcomjob} 1
fi
date +"%Y-%m-%d %H:%M" > ${NICOS_WORK_AREA}/end_date
##${NICOS_HOME}/nicos_progress_informer 10

##${NICOS_HOME}/nicos_process_oracle_results.py >> ${NICOS_LOG} 2>&1 

echo "LOLOOOOO=============="
cat $NICOS_LOG
echo "LOLOOOOO--------------"

if [ "$stat" -ne 0 ]; then
echo "nicos_job:  NICOS failed while analysing error or generating web pages";
fi












