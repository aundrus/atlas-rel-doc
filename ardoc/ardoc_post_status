#!/bin/sh
function show_help() {
    echo "ardoc_post_status: Error: incorrect option(s)"
}
###########
comname=`basename $0`
if [ "$comname" = "ardoc_post_status" ]; then
exitcomtool="exit"
else
exitcomtool="return"
fi

this_dir=`dirname $0`
#
#dateString=`date +%Y-%m-%d-%H-%M`
#epoch=`date +%s.%N`
relDateStamp=""
epoch=""
arch="undefined"
nname=""
parameter=""
phase=""
status=100
arjid=''
notimeoutcontrol_opt=''

while [ $# -ne 0 ]; do
    case $1 in
         --jid) arjid=$2; shift;;
         --stage) stage=$2; shift;;
         --epoch)   epoch=$2; shift;;
         --relstamp) relDateStamp=$2; shift;;
         -n | --nightly)   nname=$2; shift;;
         --arch)    platf=$2; shift;;
         --param) parameter=$2; shift;;
         --phase) phase=$2; shift;;
	 --status) status=$2; shift;;
         --notimeoutcontrol) notimeoutcontrol_opt='--notimeoutcontrol';;
         -* | --*)         show_help; ${exitcomtool} 1;;
    esac
    shift
done

echo "ardoc_post_status: start: nightly name: ${nname}, stage: ${stage}" `date`

if [ "${relDateStamp}" != "" ]; then
  relDateStamp_minus_T=`echo ${relDateStamp} | tr "T" " "`
  epoch=`date --date="$relDateStamp_minus_T" +%s.%N`
  echo "ardoc_post_status: release name (datestamp) determined from command line option: ${relDateStamp}"
else # if [ "${relDateStamp}" != "" ];
  if [ "${epoch}" = "" ]; then
    epoch=`date +%s.%N`
    echo "ardoc_post_status: neither release name nor epoch indicated in command line. Use current date"
  fi
  relDateStamp=`date +%Y-%m-%dT%H%M -d@${epoch}`
  echo "ardoc_post_status: release name (datestamp) derived from epoch time: ${relDateStamp}" 
fi
export ARDOC_PROJECT_RELNAME="$relDateStamp" 
[[ "$ARDOC_PROJECT_RELNAME" = "" ]] && echo "ardoc_post_status: ERROR: ARDOC_PROJECT_RELNAME is not set" && ${exitcomtool} 1
export ARDOC_EPOCH="$epoch"
echo "ardoc_post_status: epoch time of the release : ${epoch}"

[[ "$nname" != "" ]] && export ARDOC_NIGHTLY_NAME="$nname"
[[ "$ARDOC_NIGHTLY_NAME" = "" ]] && echo "ardoc_post_status: ERROR: ARDOC_NIGHTLY_NAME is not set" && ${exitcomtool} 1
[[ "$parameter" = "" ]] && echo "ardoc_post_status: parameter is not set" && ${exitcomtool} 1
[[ "$phase" = "" ]] && echo "ardoc_post_status: phase is not set" && ${exitcomtool} 1
echo "ardoc_post_status: running for nightly branch: $ARDOC_NIGHTLY_NAME"
[[ "$ARDOC_HOME" = "" ]] && echo "ardoc_post_status: ERROR: ARDOC_HOME is not set" && ${exitcomtool} 1
[[ ! -d  $ARDOC_HOME  ]] && echo "ardoc_post_status: ERROR: ARDOC_HOME $ARDOC_HOME does not exist" && ${exitcomtool} 1
export ARDOC_ORACLE_SCHEMA="ATLAS_NICOS"
export ARDOC_NIGHTLY_ROLE='main'

if [ "$phase" != "e" -a "$phase" != "b" ]; then
   echo "ardoc_post_status: ERROR: phase can be \"e\" or \"b\", indicated in CL: ${phase}"
   ${exitcomtool} 1 
fi
if [ "$status" -eq 100 ]; then
   [[ "$phase" != "b" ]] && echo "ardoc_post_status: status not indicated in command line, setting it to 0"
   status=0
fi

eval "$( echo ${ARDOC_NIGHTLY_NAME} | sed 's,^\([^_]\+\)_\([^_]\+\)_\([^\-]\+\)-\([^\-]\+\)-\([^\-]\+\)-\(.*\)$,branch_and_suffix=\1\;project=\2\; arch=\3\;flavour=\4\ comp=\5\; mode=\6\;,' )"
branch=`echo ${branch_and_suffix} | sed 's,--.*$,,'`
suffix=''
if [[ "${branch_and_suffix}" =~ ^${branch}--.*$ ]]; then
  suffix=`echo ${branch_and_suffix} | sed "s,^${branch}--,,"`
fi
export ARDOC_PROJECT_NAME="${project}"
export ARDOC_SUFFIX_PREPEND=` echo ${branch}${suffix} | sed 's/[^a-zA-Z0-9_]//g'`
export ARDOC_SUFFIX_PREPEND_EXTENDED=` echo ${branch}${suffix}${project}${comp}${mode} | sed 's/[^a-zA-Z0-9_]//g'`
dirArdocHome=`dirname $ARDOC_HOME`
export ARDOC_GEN_CONFIG_AREA=$dirArdocHome/ardoc_local_gen_config_area_${ARDOC_SUFFIX_PREPEND_EXTENDED}_${ARDOC_PROJECT_RELNAME}
echo "ardoc_post_status: ARDOC_PROJECT_NAME ${ARDOC_PROJECT_NAME}, SUFFIX PREPEND EXTENDED ${ARDOC_SUFFIX_PREPEND_EXTENDED}"
echo "ardoc_post_status: ARDOC_GEN_CONFIG_AREA ${ARDOC_GEN_CONFIG_AREA}"
export ARDOC_ARCH="${platf}"
#
dateString=`date +%Y-%m-%d-%H-%M -d@${ARDOC_EPOCH}`

jobid=""
if [ "${arjid}" != "" ]; then
   jobid="${arjid}" 
else
   if [ -f ${ARDOC_GEN_CONFIG_AREA}/jobid.txt ]; then
      jobid=`cat ${ARDOC_GEN_CONFIG_AREA}/jobid.txt | head -1`
      echo "ardoc_post_status: assigned job id $jobid"
   else
      echo "ardoc_post_status: Error: job id text file was not found: ${ARDOC_GEN_CONFIG_AREA}/jobid.txt"
      ${exitcomtool} 1
   fi
   if [[ ! ${jobid} =~ ^[0-9]+$ ]]; then
      echo "ardoc_post_status: Error: job id is non digit: $jobid"
      ${exitcomtool} 1
   fi
fi
export ARDOC_JOBID="${jobid}"

#export ARDOC_JOB_LOG=$dirArdocHome/job_logs/log_${ARDOC_PROJECT_RELNAME}_${stage}
#[[ ! -d  $dirArdocHome/job_logs ]] && mkdir $dirArdocHome/job_logs
echo "ardoc_post_status: INFO: ARDOC env:" #>> $ARDOC_JOB_LOG
env | grep ARDOC #>> $ARDOC_JOB_LOG
echo "=============== end ARDOC env" #>> $ARDOC_JOB_LOG

st=0
if [ "$exitcomtool" = "exit" ]; then
   echo "ardoc_post_status: INFO: started posting status ${status} for parameter ${parameter} phase ${phase}"
   ${ARDOC_HOME}/ardoc_db_access -${phase} -s ${parameter} -c ${status} ${notimeoutcontrol_opt}
   st=$?
   echo "ardoc_post_status: INFO: exit code $st"
fi   
${exitcomtool} ${st}

