#!/bin/sh
#
# ARDOC - ATLAS Release DOCumentation builder
# Author Alex Undrus <undrus@bnl.gov>
# 
# ----------------------------------------------------------
# ardoc_job_finish
# ----------------------------------------------------------
#
jid="NONE"
sign_cancel=0
sign_abort=0
while [ $# -ne 0 ]; do
    case $1 in
              --cancel) sign_cancel=1;;
              --abort) sign_abort=1;;
    esac
    shift
done

comname=`basename $0`
if [ "$comname" = "ardoc_job_finish" ]; then
exitcomjob="exit"
else
exitcomjob="return"
fi

if [ "${ARDOC_HOME}" = "" ]; then
echo "ardoc_job_finish: Error: ARDOC_HOME variable is not defined, " 
echo "           please set before running ardoc jobs" 
eval ${exitcomjob} 1
fi
if [ "${ARDOC_PROJECT_RELNAME}" = "" ]; then
echo "ardoc_job_finish: Error: ARDOC_PROJECT_RELNAME variable is not defined, " 
echo "           please set before running ardoc jobs" 
eval ${exitcomjob} 1
fi

if [ "$sign_cancel" -eq 1 -a "$sign_abort" -eq 1 ]; then
echo "ardoc_job_finish: Warning: both cancel and abort options are requested. Proceeding with cancel option"
echo "ardoc_job_finish: Info: only one option can be requested"
sign_abort=0
fi

export ARDOC_BUILD_FROM_SCRATCH="no"
export ARDOC_LOG_SCRATCH="no"
tmp_log="/tmp/ardoc_job_finishlog_$$"
#######STEP 0   CONFIG##########                                                                                                                  date_start_config=`date +"%Y-%m-%d %H:%M:%S"`
source ${ARDOC_HOME}/ardoc_config > ${tmp_log} 2>&1; stat=$?
echo "ardoc_job_finish: tmp log ${tmp_log}"
if [ "$stat" -ne 0 ]; then
echo "ARDOC_LOG=" ${ARDOC_LOG}
echo "ardoc_job_finish:  ARDOC failed at configuration" >> ${ARDOC_LOG}; eval ${exitcomjob} ${stat}
fi
#######                                                                                                                                           echo "ardoc_job_finish: output of configuration step:"
cat ${tmp_log}
echo "ardoc_job_finish: ARDOC env variables:"
env | grep ARDOC
cat ${tmp_log} >> ${ARDOC_LOG}
######
dirlog=`dirname $ARDOC_LOG`

jobid=""
if [ -f ${ARDOC_GEN_CONFIG_AREA}/jobid.txt ]; then
   jobid=`cat ${ARDOC_GEN_CONFIG_AREA}/jobid.txt | head -1`
   echo "ardoc_job_finish: assigned job id $jobid" >> ${ARDOC_LOG}
else
   echo "ardoc_job_finish: Error: job id text file was not created: ${ARDOC_GEN_CONFIG_AREA}/jobid.txt" >> ${ARDOC_LOG}
   ${exitcomtool} 1
fi
if [[ ! ${jobid} =~ ^[0-9]+$ ]]; then
    echo "ardoc_job_finish: Error: job id is non digit: $jobid" >> ${ARDOC_LOG}
    ${exitcomtool} 1
fi
export ARDOC_JOBID="${jobid}"

if [ "${sign_cancel}" -eq 1 ]; then
  echo "ardoc_job_finish: Info: starting ardoc_oracle_hbeat.py --canceled" >> ${ARDOC_LOG}
  echo "ardoc_job_finish: Info: starting ardoc_oracle_hbeat.py --canceled" >> ${dirlog}/ardoc_general.logora  
  ${ARDOC_HOME}/ardoc_oracle_wrapper.sh 2 python ${ARDOC_HOME}/ardoc_oracle_hbeat.py --canceled >> ${dirlog}/ardoc_general.logora 2>&1
fi
if [ "${sign_abort}" -eq 1 ]; then
  echo "ardoc_job_finish: Info: starting ardoc_oracle_hbeat.py --aborted" >> ${ARDOC_LOG}
  echo "ardoc_job_finish: Info: starting ardoc_oracle_hbeat.py --aborted" >> ${dirlog}/ardoc_general.logora
  ${ARDOC_HOME}/ardoc_oracle_wrapper.sh 2 python ${ARDOC_HOME}/ardoc_oracle_hbeat.py --aborted >> ${dirlog}/ardoc_general.logora 2>&1
fi
####END












